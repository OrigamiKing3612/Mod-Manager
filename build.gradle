plugins {
    id 'fabric-loom' version '1.3-SNAPSHOT'
    id 'maven-publish'
    id "com.modrinth.minotaur" version "2.+"
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven { url 'https://dl.cloudsmith.io/public/origamiking3612/origamikings-api/maven/' }
    maven { url "https://maven.shedaniel.me" }
    maven { url 'https://dl.cloudsmith.io/public/geckolib3/geckolib/maven/' }
    maven { url "https://repo.essential.gg/repository/maven-public/" }

}

loom {
    runs {
        datagen {
            inherit server
            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated")}"
            vmArg "-Dfabric-api.datagen.modid=mod_manager"

            runDir "build/datagen"
        }
    }
}

sourceSets {
    main {
        resources {
            srcDirs += [
                    'src/main/generated'
            ]
        }
    }
}
dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "net.origamiking:Origamikings-API:${origamikings_api}"

    modApi("me.shedaniel.cloth:cloth-config-fabric:${cloth_config_verison}") {
        exclude group: "net.fabricmc.fabric-api"
    }
    modApi("com.terraformersmc:modmenu:${modmenu_version}")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

loom {
    accessWidenerPath = file("src/main/resources/mod_manager.accesswidener")
}

java {
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
		maven {
			name = "cloudsmith"
			url = "https://maven.cloudsmith.io/origamiking3612/mod-manager/"
			credentials {
				username = System.getenv "CLOUDSMITH_USERNAME"
				password = System.getenv "CLOUDSMITH_PASSWORD"
			}
		}
    }
}
def modChangelog = "${mod_version}: \n" + "\n" +
        "Added Search, and fixed bugs\n\n ### **This mod is in alpha there will be bugs**" + "\n" + "\n" +
        "Please report any bugs [here](https://github.com/OrigamiKing3612/Mod-Manager/issues)"

modrinth {
//		debugMode = true
    token = System.getenv "MODRINTH_TOKEN"
    projectId = "${project_id}"
    versionNumber = "${mod_version}"
    versionType = "${version_type}"
    uploadFile = remapJar
    gameVersions = ['1.20.1'] // Must be an array, even with only one version
    dependencies {
        // scope.type
        // The scope can be `required`, `optional`, `incompatible`, or `embedded`
        // The type can either be `project` or `version`
        required.project "fabric-api"
        embedded.project "origamikings-api"
    }
    changelog = modChangelog
}